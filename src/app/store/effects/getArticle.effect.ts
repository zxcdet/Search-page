import { Injectable } from '@angular/core';import { Actions, createEffect, ofType } from '@ngrx/effects';import { catchError, map, of, switchMap } from 'rxjs';import { ArticleService } from '../../services/article.service';import { getArticleActions, getArticleSuccessActions, getRateFailureAction } from '../actions/getArticle.actions';import { ArticleInterface } from '../../types/article.interface';@Injectable()export class GetArticleEffect {  getArticle$ = createEffect(() =>    this.actions$.pipe(      ofType(getArticleActions),      switchMap(() => {        return this.articleService.getArticle().pipe(          map((article: ArticleInterface[]) => {            return getArticleSuccessActions({ article })          }),          catchError(() => {            return of(getRateFailureAction())          })        )      })    )  )  constructor(private actions$: Actions, private articleService: ArticleService) {}}