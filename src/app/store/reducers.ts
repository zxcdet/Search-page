import { Action, createReducer, on } from '@ngrx/store';import { ArticleStateInterface } from '../types/ArticleState.interface';import { getArticleActions, getArticleSuccessActions, getRateFailureAction } from './actions/getArticle.actions';const initialState: ArticleStateInterface = {  isLoading: false,  article: null,  validationErrors: null}const authReducer = createReducer(  initialState,  on(    getArticleActions,    (state): ArticleStateInterface => ({      ...state,      isLoading: true,      validationErrors: null,    })  ),  on(    getArticleSuccessActions,    (state, action): ArticleStateInterface => ({      ...state,      isLoading: false,      article: action.article    })  ),  on(    getRateFailureAction,    (state): ArticleStateInterface => ({      ...state,      isLoading: false,    })  ))export function reducers(state: ArticleStateInterface, action: Action) {  return authReducer(state, action)}