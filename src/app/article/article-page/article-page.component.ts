import { ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit } from '@angular/core';import { ActivatedRoute } from '@angular/router';import { Subject, takeUntil } from 'rxjs'import { ARTICLE_TOKEN } from './services/articleToken';import { ArticleServiceInterface } from './services/article-service.interface';import { ArticleInterface } from '../../types/article.interface';@Component({  selector: 'app-article-page',  templateUrl: './article-page.component.html',  styleUrls: ['./article-page.component.scss'],  changeDetection: ChangeDetectionStrategy.OnPush,})export class ArticlePageComponent implements OnInit, OnDestroy{  public article: ArticleInterface;  public articleIMG: string;  private destroy$ = new Subject()  constructor(    @Inject(ARTICLE_TOKEN) private readonly articleServiceInterface : ArticleServiceInterface,    private readonly activatedRoute: ActivatedRoute  ) {}  ngOnInit(): void {   this.fetch()  }  fetch(): void {    const id = this.activatedRoute.snapshot.paramMap.get('id');    this.articleServiceInterface.getArticle(id).pipe(      takeUntil(this.destroy$)    )      .subscribe(article => {        this.article = article        this.articleIMG = article.imageUrl      })  }  ngOnDestroy(): void {    this.destroy$.next(true);    this.destroy$.complete()  }}