import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';import { FormControl } from '@angular/forms';import { Store } from '@ngrx/store';import { map, Subject, takeUntil } from 'rxjs';import { ArticleService } from '../../services/article.service';import { ArticleInterface } from '../../types/article.interface';import { getArticlesSelector } from '../../store/selectors';@Component({  selector: "app-article",  templateUrl: './search.component.html',  styleUrls: ['./search.component.scss'],  changeDetection: ChangeDetectionStrategy.OnPush})export class SearchComponent implements OnInit, OnDestroy {  public articles: ArticleInterface[] = [];  public createArticleControl = new FormControl();  public searchStr: string[]  public page: number = 1;  public totalLenght: number;  private destroy$ = new Subject()  constructor(    private articleService: ArticleService,    private store: Store  ) {  }  ngOnInit(): void {    this.initializeValue()    this.fetchData()  }  public fetchData(): void {    this.store.select(getArticlesSelector)      .pipe(takeUntil(this.destroy$))      .subscribe(        (article: ArticleInterface[]) => {          this.articles = article;          this.totalLenght = article.length        })  }  public initializeValue(): void {    this.createArticleControl.valueChanges.pipe(      takeUntil(this.destroy$),      map((search: string) => search.trim().split(' ')),    ).subscribe((value: string[]) => this.searchStr = value)  }  ngOnDestroy(): void {    this.destroy$.next(true);    this.destroy$.complete()  }}